{
 "Resources": {
  "ApiF70053CD": {
   "Type": "AWS::ApiGatewayV2::Api",
   "Properties": {
    "Name": "Api",
    "ProtocolType": "HTTP"
   }
  },
  "ApiDefaultStage189A7074": {
   "Type": "AWS::ApiGatewayV2::Stage",
   "Properties": {
    "ApiId": {
     "Ref": "ApiF70053CD"
    },
    "StageName": "$default",
    "AutoDeploy": true
   }
  },
  "ApiVpcLinkSg585A62E1": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Security Group for API Gateway Vpc Link",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     },
     {
      "CidrIpv6": "::/0",
      "Description": "Allow all outbound ipv6 traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Fn::ImportValue": "BlogAppIntegStage-DataStack:ExportsOutputRefNetworkVpc7FB7348F649FC110"
    }
   }
  },
  "ApiVpcLink4F321C68": {
   "Type": "AWS::ApiGatewayV2::VpcLink",
   "Properties": {
    "Name": "BlogAppIntegStageAppStackApiVpcLink1F8DBB58",
    "SubnetIds": [
     {
      "Fn::ImportValue": "BlogAppIntegStage-DataStack:ExportsOutputRefNetworkVpcPrivateSubnet1Subnet6DD86AE62279BBA5"
     },
     {
      "Fn::ImportValue": "BlogAppIntegStage-DataStack:ExportsOutputRefNetworkVpcPrivateSubnet2Subnet1BDBE87783414D15"
     },
     {
      "Fn::ImportValue": "BlogAppIntegStage-DataStack:ExportsOutputRefNetworkVpcPrivateSubnet3Subnet8ABFAF5C277BED3A"
     }
    ],
    "SecurityGroupIds": [
     {
      "Fn::GetAtt": [
       "ApiVpcLinkSg585A62E1",
       "GroupId"
      ]
     }
    ]
   }
  },
  "ApiGETpostsidgetPostB2674F9F": {
   "Type": "AWS::ApiGatewayV2::Integration",
   "Properties": {
    "ApiId": {
     "Ref": "ApiF70053CD"
    },
    "IntegrationType": "HTTP_PROXY",
    "ConnectionId": {
     "Ref": "ApiVpcLink4F321C68"
    },
    "ConnectionType": "VPC_LINK",
    "IntegrationMethod": "ANY",
    "IntegrationUri": {
     "Fn::GetAtt": [
      "GetPostAppServiceCloudmapService52F860BF",
      "Arn"
     ]
    },
    "PayloadFormatVersion": "1.0"
   }
  },
  "ApiGETpostsid6F52630D": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "ApiF70053CD"
    },
    "RouteKey": "GET /posts/{id}",
    "AuthorizationType": "NONE",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "ApiGETpostsidgetPostB2674F9F"
       }
      ]
     ]
    }
   }
  },
  "ApiPOSTpostscreatePostF4B703B7": {
   "Type": "AWS::ApiGatewayV2::Integration",
   "Properties": {
    "ApiId": {
     "Ref": "ApiF70053CD"
    },
    "IntegrationType": "AWS_PROXY",
    "IntegrationUri": {
     "Fn::GetAtt": [
      "CreatePostD3E67D61",
      "Arn"
     ]
    },
    "PayloadFormatVersion": "2.0"
   }
  },
  "ApiPOSTpostscreatePostPermissionEDC29311": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CreatePostD3E67D61",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-west-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ApiF70053CD"
       },
       "/*/*/posts"
      ]
     ]
    }
   }
  },
  "ApiPOSTposts0AAB2A4C": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "ApiF70053CD"
    },
    "RouteKey": "POST /posts",
    "AuthorizationType": "NONE",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "ApiPOSTpostscreatePostF4B703B7"
       }
      ]
     ]
    }
   }
  },
  "GetPostLogGroup615A249A": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "RetentionInDays": 30
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain"
  },
  "GetPostTaskDefTaskRoleB6AF59D2": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AWSXRayDaemonWriteAccess"
       ]
      ]
     }
    ]
   }
  },
  "GetPostTaskDefTaskRoleDefaultPolicy48191C35": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "cloudwatch:PutMetricData",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:Scan"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::ImportValue": "BlogAppIntegStage-DataStack:ExportsOutputFnGetAttPostsTableC82B36F0Arn40084DA1"
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "GetPostTaskDefTaskRoleDefaultPolicy48191C35",
    "Roles": [
     {
      "Ref": "GetPostTaskDefTaskRoleB6AF59D2"
     }
    ]
   }
  },
  "GetPostTaskDef74D442CE": {
   "Type": "AWS::ECS::TaskDefinition",
   "Properties": {
    "ContainerDefinitions": [
     {
      "Environment": [
       {
        "Name": "TABLE_NAME",
        "Value": {
         "Fn::ImportValue": "BlogAppIntegStage-DataStack:ExportsOutputRefPostsTableC82B36F06B4D022D"
        }
       },
       {
        "Name": "AWS_EMF_AGENT_ENDPOINT",
        "Value": "tcp://127.0.0.1:25888"
       },
       {
        "Name": "LOG_LEVEL",
        "Value": "DEBUG"
       },
       {
        "Name": "POWERTOOLS_SERVICE_NAME",
        "Value": "GetPostService"
       },
       {
        "Name": "POWERTOOLS_METRICS_NAMESPACE",
        "Value": "blogApp"
       },
       {
        "Name": "ENV",
        "Value": "dev"
       }
      ],
      "Essential": true,
      "HealthCheck": {
       "Command": [
        "CMD-SHELL",
        "curl -s http://127.0.0.1:8080/health"
       ],
       "Interval": 5,
       "Retries": 1,
       "StartPeriod": 10,
       "Timeout": 2
      },
      "Image": {
       "Fn::Sub": "${AWS::AccountId}.dkr.ecr.us-west-2.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-us-west-2:75241d35e8dcfd8be5d360bf5443f5daca01fa248211ded949c5cf0e4e085f48"
      },
      "LogConfiguration": {
       "LogDriver": "awslogs",
       "Options": {
        "awslogs-group": {
         "Ref": "GetPostLogGroup615A249A"
        },
        "awslogs-stream-prefix": "getPost",
        "awslogs-region": "us-west-2"
       }
      },
      "Name": "getPost",
      "PortMappings": [
       {
        "ContainerPort": 8080,
        "Protocol": "tcp"
       }
      ]
     },
     {
      "Environment": [
       {
        "Name": "AWS_REGION",
        "Value": "us-west-2"
       }
      ],
      "Essential": true,
      "HealthCheck": {
       "Command": [
        "CMD-SHELL",
        "curl -s http://localhost:2000"
       ],
       "Interval": 5,
       "Retries": 3,
       "StartPeriod": 10,
       "Timeout": 2
      },
      "Image": "amazon/aws-xray-daemon:latest",
      "LogConfiguration": {
       "LogDriver": "awslogs",
       "Options": {
        "awslogs-group": {
         "Ref": "GetPostLogGroup615A249A"
        },
        "awslogs-stream-prefix": "xray",
        "awslogs-region": "us-west-2"
       }
      },
      "MemoryReservation": 256,
      "Name": "xray",
      "PortMappings": [
       {
        "ContainerPort": 2000,
        "Protocol": "udp"
       }
      ]
     },
     {
      "Environment": [
       {
        "Name": "CW_CONFIG_CONTENT",
        "Value": "{\"logs\":{\"metrics_collected\":{\"emf\":{}}},\"metrics\":{\"metrics_collected\":{\"statsd\":{}}}}"
       }
      ],
      "Essential": true,
      "Image": "public.ecr.aws/cloudwatch-agent/cloudwatch-agent:latest",
      "LogConfiguration": {
       "LogDriver": "awslogs",
       "Options": {
        "awslogs-group": {
         "Ref": "GetPostLogGroup615A249A"
        },
        "awslogs-stream-prefix": "cloudwatch-agent",
        "awslogs-region": "us-west-2"
       }
      },
      "MemoryReservation": 50,
      "Name": "cloudwatch-agent",
      "PortMappings": [
       {
        "ContainerPort": 25888,
        "Protocol": "tcp"
       }
      ]
     }
    ],
    "Cpu": "256",
    "ExecutionRoleArn": {
     "Fn::GetAtt": [
      "GetPostTaskDefExecutionRoleAAEEA792",
      "Arn"
     ]
    },
    "Family": "BlogAppIntegStageAppStackGetPostTaskDef5043EE83",
    "Memory": "512",
    "NetworkMode": "awsvpc",
    "RequiresCompatibilities": [
     "FARGATE"
    ],
    "TaskRoleArn": {
     "Fn::GetAtt": [
      "GetPostTaskDefTaskRoleB6AF59D2",
      "Arn"
     ]
    }
   }
  },
  "GetPostTaskDefExecutionRoleAAEEA792": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   }
  },
  "GetPostTaskDefExecutionRoleDefaultPolicy7D07E747": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ecr:BatchCheckLayerAvailability",
        "ecr:BatchGetImage",
        "ecr:GetDownloadUrlForLayer"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:aws:ecr:us-west-2:",
          {
           "Ref": "AWS::AccountId"
          },
          ":repository/",
          {
           "Fn::Sub": "cdk-hnb659fds-container-assets-${AWS::AccountId}-us-west-2"
          }
         ]
        ]
       }
      },
      {
       "Action": "ecr:GetAuthorizationToken",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "GetPostLogGroup615A249A",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "GetPostTaskDefExecutionRoleDefaultPolicy7D07E747",
    "Roles": [
     {
      "Ref": "GetPostTaskDefExecutionRoleAAEEA792"
     }
    ]
   }
  },
  "GetPostAppServiceA50C5323": {
   "Type": "AWS::ECS::Service",
   "Properties": {
    "Cluster": {
     "Fn::ImportValue": "BlogAppIntegStage-DataStack:ExportsOutputRefNetworkCluster17B54D113FA77A85"
    },
    "DeploymentConfiguration": {
     "Alarms": {
      "AlarmNames": [
       {
        "Ref": "GetPostDeploymentFailingFEBE5482"
       }
      ],
      "Enable": true,
      "Rollback": true
     },
     "DeploymentCircuitBreaker": {
      "Enable": true,
      "Rollback": true
     },
     "MaximumPercent": 200,
     "MinimumHealthyPercent": 50
    },
    "DeploymentController": {
     "Type": "ECS"
    },
    "EnableECSManagedTags": true,
    "LaunchType": "FARGATE",
    "NetworkConfiguration": {
     "AwsvpcConfiguration": {
      "AssignPublicIp": "DISABLED",
      "SecurityGroups": [
       {
        "Fn::GetAtt": [
         "GetPostAppServiceSecurityGroup04A7E398",
         "GroupId"
        ]
       }
      ],
      "Subnets": [
       {
        "Fn::ImportValue": "BlogAppIntegStage-DataStack:ExportsOutputRefNetworkVpcPrivateSubnet1Subnet6DD86AE62279BBA5"
       },
       {
        "Fn::ImportValue": "BlogAppIntegStage-DataStack:ExportsOutputRefNetworkVpcPrivateSubnet2Subnet1BDBE87783414D15"
       },
       {
        "Fn::ImportValue": "BlogAppIntegStage-DataStack:ExportsOutputRefNetworkVpcPrivateSubnet3Subnet8ABFAF5C277BED3A"
       }
      ]
     }
    },
    "PlatformVersion": "1.4.0",
    "ServiceRegistries": [
     {
      "ContainerName": "getPost",
      "ContainerPort": 8080,
      "RegistryArn": {
       "Fn::GetAtt": [
        "GetPostAppServiceCloudmapService52F860BF",
        "Arn"
       ]
      }
     }
    ],
    "TaskDefinition": {
     "Ref": "GetPostTaskDef74D442CE"
    }
   },
   "DependsOn": [
    "GetPostTaskDefTaskRoleDefaultPolicy48191C35",
    "GetPostTaskDefTaskRoleB6AF59D2"
   ]
  },
  "GetPostAppServiceSecurityGroup04A7E398": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "BlogAppIntegStage/AppStack/GetPost/GetPost/AppService/SecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Fn::ImportValue": "BlogAppIntegStage-DataStack:ExportsOutputRefNetworkVpc7FB7348F649FC110"
    }
   },
   "DependsOn": [
    "GetPostTaskDefTaskRoleDefaultPolicy48191C35",
    "GetPostTaskDefTaskRoleB6AF59D2"
   ]
  },
  "GetPostAppServiceSecurityGroupfromBlogAppIntegStageAppStackApiVpcLinkSg968278FA8080B641AEDA": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "IpProtocol": "tcp",
    "Description": "from BlogAppIntegStageAppStackApiVpcLinkSg968278FA:8080",
    "FromPort": 8080,
    "GroupId": {
     "Fn::GetAtt": [
      "GetPostAppServiceSecurityGroup04A7E398",
      "GroupId"
     ]
    },
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "ApiVpcLinkSg585A62E1",
      "GroupId"
     ]
    },
    "ToPort": 8080
   },
   "DependsOn": [
    "GetPostTaskDefTaskRoleDefaultPolicy48191C35",
    "GetPostTaskDefTaskRoleB6AF59D2"
   ]
  },
  "GetPostAppServiceCloudmapService52F860BF": {
   "Type": "AWS::ServiceDiscovery::Service",
   "Properties": {
    "DnsConfig": {
     "DnsRecords": [
      {
       "TTL": 60,
       "Type": "SRV"
      }
     ],
     "NamespaceId": {
      "Fn::ImportValue": "BlogAppIntegStage-DataStack:ExportsOutputFnGetAttNetworkClusterDefaultServiceDiscoveryNamespaceD090BA35IdBB648353"
     },
     "RoutingPolicy": "MULTIVALUE"
    },
    "HealthCheckCustomConfig": {
     "FailureThreshold": 1
    },
    "NamespaceId": {
     "Fn::ImportValue": "BlogAppIntegStage-DataStack:ExportsOutputFnGetAttNetworkClusterDefaultServiceDiscoveryNamespaceD090BA35IdBB648353"
    }
   },
   "DependsOn": [
    "GetPostTaskDefTaskRoleDefaultPolicy48191C35",
    "GetPostTaskDefTaskRoleB6AF59D2"
   ]
  },
  "GetPostRule216A33F2": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "EventPattern": {
     "detail-type": [
      "ECS Task State Change"
     ],
     "source": [
      "aws.ecs"
     ],
     "detail": {
      "taskDefinitionArn": [
       {
        "Ref": "GetPostTaskDef74D442CE"
       }
      ],
      "clusterArn": [
       {
        "Fn::ImportValue": "BlogAppIntegStage-DataStack:ExportsOutputFnGetAttNetworkCluster17B54D11Arn1F2D2FE4"
       }
      ],
      "desiredStatus": [
       "STOPPED"
      ],
      "stopCode": [
       "ServiceSchedulerInitiated"
      ],
      "stoppedReason": [
       "Task failed container health checks"
      ],
      "containers": {
       "name": [
        "getPost"
       ]
      }
     }
    },
    "State": "ENABLED"
   }
  },
  "GetPostDeploymentFailingFEBE5482": {
   "Type": "AWS::CloudWatch::Alarm",
   "Properties": {
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "EvaluationPeriods": 1,
    "Dimensions": [
     {
      "Name": "RuleName",
      "Value": {
       "Ref": "GetPostRule216A33F2"
      }
     }
    ],
    "MetricName": "TriggeredRules",
    "Namespace": "AWS/Events",
    "Period": 10,
    "Statistic": "Average",
    "Threshold": 1,
    "TreatMissingData": "notBreaching",
    "Unit": "Count"
   }
  },
  "CreatePostServiceRole3F6FFE7F": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "CreatePostServiceRoleDefaultPolicy45EA3357": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "xray:PutTelemetryRecords",
        "xray:PutTraceSegments"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "dynamodb:BatchWriteItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::ImportValue": "BlogAppIntegStage-DataStack:ExportsOutputFnGetAttPostsTableC82B36F0Arn40084DA1"
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CreatePostServiceRoleDefaultPolicy45EA3357",
    "Roles": [
     {
      "Ref": "CreatePostServiceRole3F6FFE7F"
     }
    ]
   }
  },
  "CreatePostD3E67D61": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-us-west-2"
     },
     "S3Key": "90bde03fedbc72e74ee34915c43bb9bf93ca6567af040e040d43a117ed6cc6d8.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "CreatePostServiceRole3F6FFE7F",
      "Arn"
     ]
    },
    "Architectures": [
     "arm64"
    ],
    "Description": "src/posts/create.lambda.ts",
    "Environment": {
     "Variables": {
      "LOG_LEVEL": "DEBUG",
      "POWERTOOLS_LOGGER_LOG_EVENT": "true",
      "POWERTOOLS_SERVICE_NAME": "CreateFunction",
      "POWERTOOLS_METRICS_NAMESPACE": "blogApp",
      "ENV": "dev",
      "TABLE_NAME": {
       "Fn::ImportValue": "BlogAppIntegStage-DataStack:ExportsOutputRefPostsTableC82B36F06B4D022D"
      },
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "Layers": [
     "arn:aws:lambda:us-west-2:094274105915:layer:AWSLambdaPowertoolsTypeScript:15"
    ],
    "MemorySize": 256,
    "Runtime": "nodejs18.x",
    "TracingConfig": {
     "Mode": "Active"
    }
   },
   "DependsOn": [
    "CreatePostServiceRoleDefaultPolicy45EA3357",
    "CreatePostServiceRole3F6FFE7F"
   ]
  }
 },
 "Outputs": {
  "ExportsOutputFnGetAttApiF70053CDApiEndpoint847E7A77": {
   "Value": {
    "Fn::GetAtt": [
     "ApiF70053CD",
     "ApiEndpoint"
    ]
   },
   "Export": {
    "Name": "BlogAppIntegStage-AppStack:ExportsOutputFnGetAttApiF70053CDApiEndpoint847E7A77"
   }
  },
  "ExportsOutputRefApiF70053CD5653BA4D": {
   "Value": {
    "Ref": "ApiF70053CD"
   },
   "Export": {
    "Name": "BlogAppIntegStage-AppStack:ExportsOutputRefApiF70053CD5653BA4D"
   }
  },
  "ExportsOutputFnGetAttGetPostAppServiceA50C5323Name6E4CBB98": {
   "Value": {
    "Fn::GetAtt": [
     "GetPostAppServiceA50C5323",
     "Name"
    ]
   },
   "Export": {
    "Name": "BlogAppIntegStage-AppStack:ExportsOutputFnGetAttGetPostAppServiceA50C5323Name6E4CBB98"
   }
  },
  "ExportsOutputRefCreatePostD3E67D61CCFCD440": {
   "Value": {
    "Ref": "CreatePostD3E67D61"
   },
   "Export": {
    "Name": "BlogAppIntegStage-AppStack:ExportsOutputRefCreatePostD3E67D61CCFCD440"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}